<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hehe9.persistent.mapper.ComicMapper">
  <resultMap id="BaseResultMap" type="cn.hehe9.persistent.entity.Comic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="source_id" jdbcType="INTEGER" property="sourceId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="birth_year" jdbcType="VARCHAR" property="birthYear" />
    <result column="read_count_weekly" jdbcType="VARCHAR" property="readCountWeekly" />
    <result column="read_count_total" jdbcType="VARCHAR" property="readCountTotal" />
    <result column="story_line" jdbcType="VARCHAR" property="storyLine" />
    <result column="poster_big_url" jdbcType="VARCHAR" property="posterBigUrl" />
    <result column="poster_mid_url" jdbcType="VARCHAR" property="posterMidUrl" />
    <result column="poster_small_url" jdbcType="VARCHAR" property="posterSmallUrl" />
    <result column="icon_url" jdbcType="VARCHAR" property="iconUrl" />
    <result column="list_page_url" jdbcType="VARCHAR" property="listPageUrl" />
    <result column="update_remark" jdbcType="VARCHAR" property="updateRemark" />
    <result column="serialize_status" jdbcType="VARCHAR" property="serializeStatus" />
    <result column="types" jdbcType="VARCHAR" property="types" />
    <result column="first_char" jdbcType="VARCHAR" property="firstChar" />
    <result column="rank" jdbcType="INTEGER" property="rank" />
    <result column="hot" jdbcType="INTEGER" property="hot" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, source_id, name, author, place, birth_year, read_count_weekly, read_count_total, 
    story_line, poster_big_url, poster_mid_url, poster_small_url, icon_url, list_page_url, 
    update_remark, serialize_status, types, first_char, rank, hot, remark, create_time, 
    modify_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from comic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from comic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.hehe9.persistent.entity.Comic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comic (source_id, name, author, 
      place, birth_year, read_count_weekly, 
      read_count_total, story_line, poster_big_url, 
      poster_mid_url, poster_small_url, icon_url, 
      list_page_url, update_remark, serialize_status, 
      types, first_char, rank, 
      hot, remark, create_time, 
      modify_time)
    values (#{sourceId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{place,jdbcType=VARCHAR}, #{birthYear,jdbcType=VARCHAR}, #{readCountWeekly,jdbcType=VARCHAR}, 
      #{readCountTotal,jdbcType=VARCHAR}, #{storyLine,jdbcType=VARCHAR}, #{posterBigUrl,jdbcType=VARCHAR}, 
      #{posterMidUrl,jdbcType=VARCHAR}, #{posterSmallUrl,jdbcType=VARCHAR}, #{iconUrl,jdbcType=VARCHAR}, 
      #{listPageUrl,jdbcType=VARCHAR}, #{updateRemark,jdbcType=VARCHAR}, #{serializeStatus,jdbcType=VARCHAR}, 
      #{types,jdbcType=VARCHAR}, #{firstChar,jdbcType=VARCHAR}, #{rank,jdbcType=INTEGER}, 
      #{hot,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.hehe9.persistent.entity.Comic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sourceId != null">
        source_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="place != null">
        place,
      </if>
      <if test="birthYear != null">
        birth_year,
      </if>
      <if test="readCountWeekly != null">
        read_count_weekly,
      </if>
      <if test="readCountTotal != null">
        read_count_total,
      </if>
      <if test="storyLine != null">
        story_line,
      </if>
      <if test="posterBigUrl != null">
        poster_big_url,
      </if>
      <if test="posterMidUrl != null">
        poster_mid_url,
      </if>
      <if test="posterSmallUrl != null">
        poster_small_url,
      </if>
      <if test="iconUrl != null">
        icon_url,
      </if>
      <if test="listPageUrl != null">
        list_page_url,
      </if>
      <if test="updateRemark != null">
        update_remark,
      </if>
      <if test="serializeStatus != null">
        serialize_status,
      </if>
      <if test="types != null">
        types,
      </if>
      <if test="firstChar != null">
        first_char,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="hot != null">
        hot,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sourceId != null">
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="birthYear != null">
        #{birthYear,jdbcType=VARCHAR},
      </if>
      <if test="readCountWeekly != null">
        #{readCountWeekly,jdbcType=VARCHAR},
      </if>
      <if test="readCountTotal != null">
        #{readCountTotal,jdbcType=VARCHAR},
      </if>
      <if test="storyLine != null">
        #{storyLine,jdbcType=VARCHAR},
      </if>
      <if test="posterBigUrl != null">
        #{posterBigUrl,jdbcType=VARCHAR},
      </if>
      <if test="posterMidUrl != null">
        #{posterMidUrl,jdbcType=VARCHAR},
      </if>
      <if test="posterSmallUrl != null">
        #{posterSmallUrl,jdbcType=VARCHAR},
      </if>
      <if test="iconUrl != null">
        #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="listPageUrl != null">
        #{listPageUrl,jdbcType=VARCHAR},
      </if>
      <if test="updateRemark != null">
        #{updateRemark,jdbcType=VARCHAR},
      </if>
      <if test="serializeStatus != null">
        #{serializeStatus,jdbcType=VARCHAR},
      </if>
      <if test="types != null">
        #{types,jdbcType=VARCHAR},
      </if>
      <if test="firstChar != null">
        #{firstChar,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="hot != null">
        #{hot,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hehe9.persistent.entity.Comic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comic
    <set>
      <if test="sourceId != null">
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="place != null">
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="birthYear != null">
        birth_year = #{birthYear,jdbcType=VARCHAR},
      </if>
      <if test="readCountWeekly != null">
        read_count_weekly = #{readCountWeekly,jdbcType=VARCHAR},
      </if>
      <if test="readCountTotal != null">
        read_count_total = #{readCountTotal,jdbcType=VARCHAR},
      </if>
      <if test="storyLine != null">
        story_line = #{storyLine,jdbcType=VARCHAR},
      </if>
      <if test="posterBigUrl != null">
        poster_big_url = #{posterBigUrl,jdbcType=VARCHAR},
      </if>
      <if test="posterMidUrl != null">
        poster_mid_url = #{posterMidUrl,jdbcType=VARCHAR},
      </if>
      <if test="posterSmallUrl != null">
        poster_small_url = #{posterSmallUrl,jdbcType=VARCHAR},
      </if>
      <if test="iconUrl != null">
        icon_url = #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="listPageUrl != null">
        list_page_url = #{listPageUrl,jdbcType=VARCHAR},
      </if>
      <if test="updateRemark != null">
        update_remark = #{updateRemark,jdbcType=VARCHAR},
      </if>
      <if test="serializeStatus != null">
        serialize_status = #{serializeStatus,jdbcType=VARCHAR},
      </if>
      <if test="types != null">
        types = #{types,jdbcType=VARCHAR},
      </if>
      <if test="firstChar != null">
        first_char = #{firstChar,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="hot != null">
        hot = #{hot,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hehe9.persistent.entity.Comic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comic
    set source_id = #{sourceId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      place = #{place,jdbcType=VARCHAR},
      birth_year = #{birthYear,jdbcType=VARCHAR},
      read_count_weekly = #{readCountWeekly,jdbcType=VARCHAR},
      read_count_total = #{readCountTotal,jdbcType=VARCHAR},
      story_line = #{storyLine,jdbcType=VARCHAR},
      poster_big_url = #{posterBigUrl,jdbcType=VARCHAR},
      poster_mid_url = #{posterMidUrl,jdbcType=VARCHAR},
      poster_small_url = #{posterSmallUrl,jdbcType=VARCHAR},
      icon_url = #{iconUrl,jdbcType=VARCHAR},
      list_page_url = #{listPageUrl,jdbcType=VARCHAR},
      update_remark = #{updateRemark,jdbcType=VARCHAR},
      serialize_status = #{serializeStatus,jdbcType=VARCHAR},
      types = #{types,jdbcType=VARCHAR},
      first_char = #{firstChar,jdbcType=VARCHAR},
      rank = #{rank,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <sql id="Except_Big_Data_Column_List">
		id, source_id, name, author, place, birth_year, read_count_weekly,
		read_count_total, poster_big_url, poster_mid_url, poster_small_url, icon_url, list_page_url,
		update_remark, serialize_status, types, first_char, rank, hot,
		remark, create_time, modify_time
	</sql>

	<resultMap id="BriefResultMap" type="cn.hehe9.persistent.entity.Comic">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="source_id" property="sourceId" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="icon_url" property="iconUrl" jdbcType="VARCHAR" />
		<result column="update_remark" property="updateRemark"
			jdbcType="VARCHAR" />
		<result column="first_char" property="firstChar" jdbcType="VARCHAR" />
		<result column="list_page_url" property="listPageUrl" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Brief_Column_List">
		id, source_id, name, icon_url, update_remark, first_char, serialize_status, list_page_url
	</sql>

	<sql id="Conditions_Sql">
		<if test="id != null">
			and id = #{id,jdbcType=INTEGER}
		</if>
		<if test="sourceId != null">
			and source_id = #{sourceId,jdbcType=INTEGER}
		</if>
		<if test="firstChar != null and firstChar != ''">
			and first_char = #{firstChar,jdbcType=VARCHAR}
		</if>
		<if test="name != null and name != ''">
			and name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
		</if>
		<if test="listPageUrl != null and listPageUrl != ''">
			and list_page_url = #{listPageUrl,jdbcType=VARCHAR}
		</if>
	</sql>

	<select id="findBy" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from comic
		where 1=1
		<include refid="Conditions_Sql" />
		order by rank asc, id asc
		limit #{offset}, #{count}
	</select>

	<select id="findExceptBigDataBy" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Except_Big_Data_Column_List" />
		from comic
		where 1=1
		<include refid="Conditions_Sql" />
		order by rank asc, id asc
		limit #{offset}, #{count}
	</select>

	<select id="findBriefBy" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Brief_Column_List" />
		from comic
		where 1=1
		<include refid="Conditions_Sql" />
		order by rank asc, source_id asc, id asc
		limit #{offset}, #{count}
	</select>

	<select id="countBy" parameterType="map" resultType="INTEGER">
		select count(1) from comic
		where 1=1
		<include refid="Conditions_Sql" />
	</select>

	<select id="listBriefGroupByFirstChar" parameterType="map"
		resultMap="BriefResultMap">
	<![CDATA[
		select a.id, a.name, a.first_char from comic a 
		where 
		#{countPerFirstChar} >= (select count(1) from comic b where a.first_char = b.first_char and a.id < b.id)
		order by a.first_char asc, a.name asc
		]]>
	</select>
	
	<select id="listNoEpisodeComics" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Brief_Column_List" />
		from comic
		where id not in (select comic_id from comic_episode)
	</select>
	
	<update id="updateRank" parameterType="map">
		update comic set rank = #{rank}
		where source_id = #{sourceId}
	</update>
	
	<delete id="delete" parameterType="list">
		<choose>
			<when test="comicIds != null and comicIds.size() &gt; 0">
				delete from comic where id in 
		   		<foreach item="item" index="index" collection="comicIds" open="("
				separator="," close=")">
				#{item}
				</foreach>
			</when>
			<otherwise>
				select 0
			</otherwise>
		</choose>
	</delete>
</mapper>
